import { motion } from "framer-motion";
import { div } from "framer-motion/client";
import { useState } from "react";
import HeaderIntroduction from "../components/HeaderIntroduction";

const Introduction = () => {
  const [step, setStep] = useState(1); // Track which step the user is on
  const [formData, setFormData] = useState({ name: "", location: "" });

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleNext = () => {
    if (step === 1 && formData.name.trim() === "") return;
    if (step === 2 && formData.location.trim() === "") return;
    setStep(step + 1);
  };

  return (



//     <div className="relative flex flex-col items-center justify-center min-h-screen bg-white px-6 md:px-16 py-20 overflow-hidden">
//           {/* Top Left Text */}
//           <div className="absolute top-10 left-10 text-black text-sm md:text-base font-semibold">
//              <p>SKINSTRIC</p>
//             <p>TO START ANALYSIS</p>
//           </div>

// <div>
    <div className="relative flex flex-col items-center justify-center min-h-screen bg-white px-6 md:px-16 py-20">
      {/* Back Button */}
      {step > 1 && (
        <button
          onClick={() => setStep(step - 1)}
          className="absolute bottom-10 left-10 text-black flex items-center space-x-2"
        >
          <div className="border border-black p-2 flex items-center">
            ◀ <span className="ml-2">BACK</span>
          </div>
        </button>
      )}

      {/* Title Section */}
      <motion.div
        key={step} // This ensures animations restart on step change
        initial={{ opacity: 0, y: 50 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 1 }}
        className="text-center text-lg"
      >
        <p className="text-gray-500 uppercase tracking-wide text-sm">CLICK TO TYPE</p>
        <h1 className="text-xl md:text-xl font-bold text-black mt-4">
          {step === 1 ? "Introduce yourself" : "Where are you from?"}
        </h1>
      </motion.div>

      {/* Input Field */}
      <motion.div
        // key={`input-${step}`}
        // initial={{ opacity: 0, y: 50 }}
        // animate={{ opacity: 1, y: 0 }}
        // transition={{ duration: 1.2 }}
        // className="mt-8 w-full max-w-md"
        type="text"
        placeholder= 'Enter Your Name'
        onChange={handleChange}
        className="w-full bg-transparent border-b-2 border-black text-center text-4xl font-semibold p-2 focus:outline-none max-w-xs "

      >
        <input
          type="text"
          name={step === 1 ? "name" : "location"}
          placeholder={step === 1 ? "Enter your name" : "Enter your location"}
          value={step === 1 ? formData.name : formData.location}
          onChange={handleChange}
          className="w-full bg-transparent border-black text-center text-2xl p-2 focus:outline-none  max-sm:text-xl"
        />
      </motion.div>



      {/* <motion.div
        className="absolute w-[400px] h-[400px] border border-dotted border-gray-400 rotate-45"
        initial={{ opacity: 0, scale: 0.8 }}
        animate={{ opacity: 1, scale: 1, rotate: 360 }}
        transition={{ duration: 29, repeat: Infinity, ease:'linear' }}
      ></motion.div>
      <motion.div
        className="absolute w-[500px] h-[500px] border border-dotted border-gray-500 rotate-45"
        initial={{ opacity: 0, scale: 0.8 }}
        animate={{ opacity: 1, scale: 1, rotate: -360 }}
        transition={{ duration: 25, repeat: Infinity, ease: "linear" }}
      ></motion.div>
      <motion.div
        className="absolute w-[600px] h-[600px] border border-dotted border-gray-400 rotate-45"
        initial={{ opacity: 0, scale: 0.8 }}
        animate={{ opacity: 1, scale: 1, rotate: 360 }}
        transition={{ duration: 22, repeat: Infinity, ease: "linear" }}
      ></motion.div> */}

















      import { motion } from "framer-motion";
import { useState } from "react";

const Contact = () => {
  const [formData, setFormData] = useState({ name: "", email: "", message: "" });

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("Form Submitted:", formData);
    alert("Thank you for contacting us!");
    setFormData({ name: "", email: "", message: "" });
  };

  return (
    <section className="relative flex flex-col items-center justify-center min-h-screen bg-gray-100 px-6 md:px-16 py-20">
      {/* Contact Heading */}
      <motion.h2
        initial={{ opacity: 0, y: 50 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 1 }}
        className="text-5xl md:text-7xl font-bold text-black text-center mb-10"
      >
        Let's <span className="underline decoration-black">Connect</span>
      </motion.h2>

      {/* Contact Form */}
      <motion.form
        initial={{ opacity: 0, y: 50 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 1 }}
        onSubmit={handleSubmit}
        className="bg-white p-8 shadow-lg rounded-lg max-w-lg w-full"
      >
        <div className="mb-4">
          <label className="block text-black font-medium mb-2">Name</label>
          <input
            type="text"
            name="name"
            value={formData.name}
            onChange={handleChange}
            required
            className="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-black"
          />
        </div>

        <div className="mb-4">
          <label className="block text-black font-medium mb-2">Email</label>
          <input
            type="email"
            name="email"
            value={formData.email}
            onChange={handleChange}
            required
            className="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-black"
          />
        </div>

        <div className="mb-4">
          <label className="block text-black font-medium mb-2">Message</label>
          <textarea
            name="message"
            value={formData.message}
            onChange={handleChange}
            required
            rows="4"
            className="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-black"
          ></textarea>
        </div>

        <button
          type="submit"
          className="w-full py-3 bg-black text-white font-semibold rounded-lg hover:bg-gray-900 transition"
        >
          Send Message
        </button>
      </motion.form>
    </section>
  );
};

export default Contact;




import { motion } from "framer-motion";

const Footer = () => {
  return (
    <motion.footer
      initial={{ opacity: 0, y: 50 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 1 }}
      className="bg-black text-white py-10"
    >
      <div className="max-w-6xl mx-auto px-6 md:px-10 flex flex-col md:flex-row justify-between items-center">
        {/* Footer Left - Logo */}
        <div className="text-xl font-bold uppercase">
          SKINSTRIC
        </div>

        {/* Footer Middle - Links */}
        <div className="flex space-x-6 text-sm text-gray-400 mt-6 md:mt-0">
          <a href="/" className="hover:text-white transition">Home</a>
          <a href="/about" className="hover:text-white transition">About</a>
          <a href="/services" className="hover:text-white transition">Services</a>
          <a href="/contact" className="hover:text-white transition">Contact</a>
        </div>

        {/* Footer Right - Copyright */}
        <div className="text-gray-500 text-sm mt-6 md:mt-0">
          © {new Date().getFullYear()} Skinstric. All Rights Reserved.
        </div>
      </div>
    </motion.footer>
  );
};

export default Footer;


import { motion } from "framer-motion";

const servicesData = [
  {
    title: "Proprietary Algorithms",
    description: "For effective formula design based on scientific research.",
  },
  {
    title: "Complete Control",
    description: "Over skincare ingredients to ensure customized solutions.",
  },
  {
    title: "Expert Clinical Guidance",
    description: "Diagnostics and personalized recommendations from experts.",
  },
  {
    title: "Fully Customizable",
    description: "Skincare designed from scratch for unique skin needs.",
  },
  {
    title: "FDA / TGA Approved",
    description: "Using only approved compound pharmacies for safety and quality.",
  },
];

const Services = () => {
  return (
    <section className="relative flex flex-col items-center justify-center min-h-screen bg-gray-100 px-6 md:px-16 py-20">
      {/* Services Heading */}
      <motion.h2
        initial={{ opacity: 0, y: 50 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 1 }}
        className="text-5xl md:text-7xl font-bold text-black text-center mb-10"
      >
        Our <span className="underline decoration-black">Services</span>
      </motion.h2>

      {/* Services Grid */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-12 max-w-6xl">
        {servicesData.map((service, index) => (
          <motion.div
            key={index}
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 1, delay: index * 0.2 }}
            className="p-6 bg-white shadow-lg rounded-lg text-center"
          >
            <h3 className="text-xl font-semibold text-black mb-4">{service.title}</h3>
            <p className="text-gray-700">{service.description}</p>
          </motion.div>
        ))}
      </div>
    </section>
  );
};

export default Services;


import { useState, useEffect } from "react";
import { motion } from "framer-motion";

const Navbar = () => {
  const [scrolled, setScrolled] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      if (window.scrollY > 50) {
        setScrolled(true);
      } else {
        setScrolled(false);
      }
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  return (
    <motion.nav
      initial={{ opacity: 0, y: -20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className={`fixed top-0 w-full z-50 transition-all ${
        scrolled ? "bg-white shadow-md py-3" : "bg-transparent py-5"
      }`}
    >
      <div className="max-w-7xl mx-auto px-6 md:px-10 flex justify-between items-center">
        {/* Logo */}
        <a href="/" className="text-xl font-bold text-black uppercase">
          SKINSTRIC
        </a>

        {/* Navigation Links */}
        <ul className="hidden md:flex space-x-10 text-black font-medium text-sm">
          <li><a href="/" className="hover:text-gray-500 transition">Home</a></li>
          <li><a href="/about" className="hover:text-gray-500 transition">About</a></li>
          <li><a href="/services" className="hover:text-red-500 transition text-red-700">Services</a></li>
          <li><a href="/contact" className="hover:text-gray-500 transition  text-blue-500">Contact</a></li>
        </ul>
      </div>
    </motion.nav>
  );
};

export default Navbar;












      {/* Proceed Button */}
      {step < 2 && (
        <button
          onClick={handleNext}
          className="absolute bottom-10 right-10 text-black flex items-center space-x-2 "
        >
          <div className="border border-black p-2 flex items-center ">
            <span className="mr-2">PROCEED</span> ▶
          </div>
        </button>
      )}

      {/* Start Analysis Button  */}
      {step === 2 && (
        <button
          onClick={() => console.log("Submitting data:", formData)}
          className="absolute bottom-10 right-10 text-black flex items-center space-x-2"
        >
          <div className="border border-black p-2 flex items-center">
            <span className="mr-2">START ANALYSIS</span> ▶
          </div>
        </button>
      
      )}
    </div>
  
    
   
    
  );
};

export default Introduction;





























// import { motion } from "framer-motion";
// import { useState } from "react";
// import { Link } from "react-router-dom";

// const Introduction = () => {
//   const [step, setStep] = useState(1);
//   const [formData, setFormData] = useState({ name: "", location: "" });

//   const handleChange = (e) => {
//     setFormData({ ...formData, [e.target.name]: e.target.value });
//   };

//   const handleNext = () => {
//     if (step === 1 && formData.name.trim() === "") return;
//     if (step === 2 && formData.location.trim() === "") return;
//     setStep(step + 1);
//   };

//   return (
//     <div className="relative flex flex-col items-center justify-center min-h-screen bg-white px-6 md:px-16 py-20 overflow-hidden">
//       {/* Top Left Text */}
//       <div className="absolute top-10 left-10 text-black text-sm md:text-base">
//         <p className="font-semibold">SKINSTRIC</p>
//         <p className="mt-2">TO START ANALYSIS</p>
//       </div>

//       {/* Back Button */}
//       {step > 1 && (
//         <button
//           onClick={() => setStep(step - 1)}
//           className="absolute bottom-10 left-10 text-black flex items-center space-x-2"
//         >
//           <div className="border border-black p-2 flex items-center">
//             ◀ <span className="ml-2">BACK</span>
//           </div>
//         </button>
//       )}

//       {/* Title Section */}
//       <motion.div
//         key={step}
//         initial={{ opacity: 0, y: 50 }}
//         animate={{ opacity: 1, y: 0 }}
//         transition={{ duration: 1 }}
//         className="text-center"
//       >
//         <p className="text-gray-500 uppercase tracking-wide text-sm">CLICK TO TYPE</p>
//         <h1 className="text-5xl md:text- font-semibold text-black mt-4">
//           Intrduce your self
//         </h1>

//          {/* Input Field  */}
//       <motion.div
//         key={`input-${step}`}
//         initial={{ opacity: 0, y: 50 }}
//         animate={{ opacity: 1, y: 1 }}
//         transition={{ duration: 10}}
//         className="absolute top-[62%] right-[26%] transform -translate-x-1/2 -translate-y-1/2 w-full max-w-md z-50 "
//       >
//         <input
//           type="text"
//           placeholder= 'Enter Your Name'
//           onChange={handleChange}
//           className="w-full bg-transparent border-b-2 border-black text-center text-4xl font-semibold p-2 focus:outline-none max-w-xs "
//         />
//       </motion.div>
//       </motion.div>

     

//       {/* Animated Rotating Dotted Borders */}
//       <motion.div
//         className="absolute w-[400px] h-[400px] border border-dotted border-gray-400 rotate-45"
//         initial={{ opacity: 0, scale: 0.8 }}
//         animate={{ opacity: 1, scale: 1, rotate: 360 }}
//         transition={{ duration: 29, repeat: Infinity, ease:'linear' }}
//       ></motion.div>
//       <motion.div
//         className="absolute w-[500px] h-[500px] border border-dotted border-gray-800 rotate-45"
//         initial={{  scale: 0.8 }}
//         animate={{ scale: 1, rotate: -360 }}
//         transition={{ duration: 25, repeat: Infinity, ease: "linear" }}
//       ></motion.div>
//       <motion.div
//         className="absolute w-[600px] h-[600px] border border-dotted border-gray-400 rotate-45"
//         initial={{  scale: 0.8 }}
//         animate={{  scale: 1, rotate: 360 }}
//         transition={{ duration: 22, repeat: Infinity, ease: "linear" }}
//       ></motion.div>

//       {/* Proceed Button */}
//       {step < 2 && (
//         <button
//           onClick={handleNext}
//           className="absolute bottom-10 right-10 text-black flex items-center space-x-2"
//         >
//           <div className="border border-black p-2 flex items-center">
//             <span className="mr-2">PROCEED</span> ▶
//           </div>
//         </button>
//       )}
//     </div>
//   );
// };

// export default Introduction;


